#!/bin/sh -efu
#
# Copyright (C) 2021  Gleb Fotengauer-Malinovskiy <glebfm@altlinux.org>
#
# Script to describe specfile.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

. gear-sh-functions
. shell-getopt

show_help()
{
	cat <<-EOF
	Usage: $PROG [options] <specfile>

	Options:
	  -E, --epoch         print version with epoch (if any);
	  -V, --version       print program version and exit;
	  -h, --help          show this text and exit.

	Report bugs to https://bugzilla.altlinux.org/

	EOF
	exit
}

print_version()
{
	cat <<-EOF
	$PROG version $PROG_VERSION
	Written by Gleb Fotengauer-Malinovskiy <glebfm@altlinux.org>

	Copyright (C) 2021  Gleb Fotengauer-Malinovskiy <glebfm@altlinux.org>
	This is free software; see the source for copying conditions.  There is NO
	warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	EOF
	exit
}

TEMP=$(getopt -n $PROG -o E,V,h -l epoch,version,help -- "$@") ||
	show_usage
eval set -- "$TEMP"

print_epoch=
while :; do
	case "$1" in
		-E|--epoch) print_epoch=1
			;;
		-h|--help) show_help
			;;
		-V|--version) print_version
			;;
		--) shift; break
			;;
	esac
	shift
done

[ "$#" -ge 1 ] ||
	show_usage 'Not enough arguments.'
[ "$#" -eq 1 ] ||
	show_usage 'Too many arguments.'

specfile="$(readlink -ev -- "$1")"; shift

get_NVR_from_spec "$specfile"

if [ -z "$spec_name" ] || [ -z "$spec_version" ] || [ -z "$spec_release" ]; then
	fatal 'failed to determine package info'
fi

version="$spec_version"
[ -z "$print_epoch" ] ||
	version="${spec_epoch:+$spec_epoch:}$spec_version"

printf '%s %s %s\n' "$spec_name" "$version" "$spec_release"
